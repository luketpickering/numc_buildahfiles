#!/bin/bash

#If anything fails, we back out
set -e
if [ -z $BB_SCRIPT_DIR ]; then
  echo "[ERROR]: buildahbash script running outside buildahbash environment"
  exit 1
fi
source $BB_SCRIPT_DIR/buildah.funcs
GIT_TAG=R-${BB_PKG_VERS}
COMPILE_STAGE_NAME="${BB_PKG_IMAGE_FQNAME}_build"
NAME="${BB_PKG_NAME}"

if [ -z ${N_CORE} ]; then
    N_CORE=4
fi

if ! podman image exists ${COMPILE_STAGE_NAME}; then

  BUILD=$(bb_from_buildbox)

  # Pull down and minify the spline file if you haven't already
  # N.B. This happens on outside of the container
  if [ ! -e ${BB_PKG_DIR}/gxspl-min.xml.gz ]; then
    cd ${BB_PKG_DIR}
    if [ ! -e genie_xsec-2.12.10-noarch-DefaultPlusValenciaMEC.tar.bz2 ]; then
      wget https://scisoft.fnal.gov/scisoft/packages/genie_xsec/v2_12_10/genie_xsec-2.12.10-noarch-DefaultPlusValenciaMEC.tar.bz2 -O genie_xsec-2.12.10-noarch-DefaultPlusValenciaMEC.tar.bz2
    fi
    tar xvf genie_xsec-2.12.10-noarch-DefaultPlusValenciaMEC.tar.bz2
    mv genie_xsec/v2_12_10/NULL/DefaultPlusValenciaMEC/data/gxspl-FNALsmall.xml ./
    mv genie_xsec/v2_12_10/NULL/DefaultPlusValenciaMEC/data/UserPhysicsOptions.tidyReduced.xml ./UserPhysicsOptions.xml
    rm -r genie_xsec
    tar -xvf genie_xsec-2.12.10-noarch-DefaultPlusValenciaMEC.tar.bz2
    awk -f gxspl.min.awk gxspl-FNALsmall.xml > gxspl-min.xml
    gzip gxspl-min.xml
    cd -
  fi

  bb_cont_mkdir ${BUILD} /var/genie/xsec/DefaultPlusValenciaMEC

  bb_add_from_pkg_dir ${BUILD} UserPhysicsOptions.xml /var/genie/xsec/DefaultPlusValenciaMEC/
  bb_add_from_pkg_dir ${BUILD} gxspl-min.xml.gz /var/genie/xsec/DefaultPlusValenciaMEC/

  bb_inject lhapdf 5.9.1 ${BUILD}
  bb_inject root v6-12-06 ${BUILD}

  bb_cont_set_env ${BUILD} GENIE /opt/${NAME}-src/Generator

  bb_cont_mkdir_cd ${BUILD} /opt/${NAME}-src

  buildah run ${BUILD} git clone  \
                          https://github.com/GENIE-MC/Generator.git

  bb_cont_cd ${BUILD} /opt/${NAME}-src/Generator

  buildah run ${BUILD} git checkout ${GIT_TAG}

  DEBUG_ARG=""
  if bb_is_debug_build; then
    DEBUG_ARG="--enable-debug"
  fi

  buildah run ${BUILD} ./configure --prefix=/opt/genie/${BB_PKG_VERS} \
                                   --enable-rwght ${DEBUG_ARG}
  buildah run ${BUILD} make

  bb_cont_mkdir ${BUILD} /opt/genie/${BB_PKG_VERS}
  buildah run ${BUILD} make install

  LHAPATH=$(bb_cont_get_env ${BUILD} LHAPATH)
  bb_cont_cp ${BUILD} \
    /opt/${NAME}-src/Generator/data/evgen/pdfs/GRV98lo_patched.LHgrid \
    ${LHAPATH}/GRV98lo_patched.LHgrid

  GENIE="/opt/genie/${BB_PKG_VERS}"
  bb_cont_set_env ${BUILD} GENIE ${GENIE}

  # Install some things that the GENIE isntall script forget.
  bb_cont_cp ${BUILD} -r /opt/${NAME}-src/Generator/src/Interfaces \
                         ${GENIE}/include/GENIE/
  bb_cont_cp ${BUILD} /opt/${NAME}-src/Generator/VERSION ${GENIE}/
  bb_cont_cp ${BUILD} -r /opt/${NAME}-src/Generator/config \
                         ${GENIE}/
  bb_cont_mkdir ${BUILD} ${GENIE}/data/
  bb_cont_cp ${BUILD} -r /opt/${NAME}-src/Generator/data/evgen \
                         ${GENIE}/data/

  bb_cont_mkdir ${BUILD} ${GENIE}/src/make/
  bb_cont_cp ${BUILD} /opt/${NAME}-src/Generator/src/make/Make.config_no_paths \
                      ${GENIE}/src/make/

  # Make symlinks for software that includes GENIE headers via ${GENIE}/src
  bb_cont_cd ${BUILD} ${GENIE}/src
  buildah run ${BUILD} bash -c "ln -s -t . ../include/GENIE/*/"

  bb_commit ${BUILD} ${COMPILE_STAGE_NAME}

fi

BASE=$(bb_from_runbox)

bb_consume_target ${NAME} ${BB_PKG_VERS} \
  $(buildah from ${COMPILE_STAGE_NAME}) ${BASE}

bb_commit ${BASE}
