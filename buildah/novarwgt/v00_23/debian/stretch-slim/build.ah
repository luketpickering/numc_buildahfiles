#!/bin/bash

set +x

TAG=$1
if [ -z $TAG ]; then
  echo "Error ${0} expected to be passed a tag."
  exit 1
fi

NAME="novarwgt"
VERSNAME="v00_23"
VERSSTR="v00.23"

FQCONTSTUB="${BB_REPO_SL}${NAME}_${VERSNAME}"
FQCONTNAME="${FQCONTSTUB}:${TAG}"
COMPILE_STAGE="${FQCONTSTUB}:build_int"

if [ -z ${N_CORE} ]; then
    N_CORE=4
fi

#If anything fails, we back out
set -e

if [ -z $BB_SCRIPT_DIR ]; then
  echo "[ERROR]: buildahbash script running outside buildahbash environment"
  exit 1
fi

source $BB_SCRIPT_DIR/common.funcs

if podman image exists ${COMPILE_STAGE}; then
  BUILD=$(buildah from ${COMPILE_STAGE})
else

  BUILD=$(buildah from $(bb_get_buildbox ${ROOT_IT}))

  GENIE_CONT=$(buildah from $(bb_get_reponame genie_2_12_2 ${ROOT_IT}))
  bb_inject ${GENIE_CONT} ${BUILD} genie ${ROOT_IT} 2_12_2
  buildah rm ${GENIE_CONT}

  buildah run ${BUILD} mkdir -p /opt/${NAME}-src

  bb_add ${BUILD} NOvARwgt /opt/${NAME}-src

  buildah config --workingdir /opt/${NAME}-src  ${BUILD}

  buildah run ${BUILD} git checkout ${VERSSTR}

  buildah run ${BUILD} sed -i "s/cmake_minimum_required(VERSION 3.10)/cmake_minimum_required(VERSION 3.7)/g" CMakeLists.txt

  buildah run ${BUILD} mkdir -p /opt/${NAME}-build

  buildah config --workingdir /opt/${NAME}-build  ${BUILD}

  buildah run ${BUILD} cmake /opt/${NAME}-src \
          -DCMAKE_INSTALL_PREFIX=/opt/${NAME}/${VERSSTR} \
          -DNOVARWGT_USE_NUSIMDATA=OFF -DNOVARWGT_USE_CETLIB=OFF \
          -DNOVARWGT_USE_GENIE=ON -DNOVARWGT_INSTALL_SOURCE=OFF \
          -DCMAKE_BUILD_TYPE=RELEASE

  buildah run ${BUILD} make install -j ${N_CORE}

  buildah commit ${BUILD} ${COMPILE_STAGE}

fi

# FROM picker24/runbox:latest
BASE=$(buildah from $(bb_get_runbox ${ROOT_IT}))

bb_inject ${BUILD} ${BASE} ${NAME} ${ROOT_IT} ${VERSNAME}

# WORKDIR /

# ENTRYPOINT ["/bin/bash"]
buildah config --entrypoint /bin/bash ${BASE}

# CMD []

bb_set_psone ${BASE} ${FQCONTSTUB}

echo "Committing..."
buildah commit ${BASE} ${FQCONTNAME}

buildah rm ${BUILD} ${BASE}